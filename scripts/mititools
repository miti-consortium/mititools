#!/usr/bin/env python3
import argparse
import os
from os.path import exists

import mititools

from mititools.serializers.cerberus_yaml import load_yaml_schema

import mititools.converters.cerberus_to_flatfields as cerberus_to_flatfields
import mititools.converters.flatfields_to_frictionless as flatfields_to_frictionless

from mititools.serializers.flatfields import write_flatfields
from mititools.serializers.frictionless import write_frictionless

from mititools.serializers.cv import write_cv


if __name__=='__main__':
    parser = argparse.ArgumentParser(description='Command-line MITI tools.')
    parser.add_argument('command', choices=['generate'], help='Command.')
    parser.add_argument('--source-dir',
        dest='source_dir',
        nargs=1,
        help='Source directory containing YAML-formatted reference specification.',
    )
    args = parser.parse_args()

    if args.command == 'generate':
        source_dir = args.source_dir[0]
        if not exists(source_dir):
            print('Source directory %s does not exist.' % source_dir)
            exit(1)

        dicts = load_yaml_schema(source_dir)
        fields_table, tables_table, data_tables, cv_tables = cerberus_to_flatfields.convert(dicts)

        write_flatfields(fields_table, tables_table)
        write_cv(cv_tables)

        top_variables = flatfields_to_frictionless.convert(fields_table, tables_table)
        write_frictionless(top_variables, data_tables, cv_tables)
